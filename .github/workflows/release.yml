name: Build and Release EXE (Modern)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build exe
        run: |
          pyinstaller main.spec

      - name: Generate version and release info
        id: version
        run: |
          $timestamp = Get-Date -Format "yyyy.MM.dd.HHmm"
          $version = "v$timestamp"
          $commit_short = "${{ github.sha }}".Substring(0, 7)
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
          echo "COMMIT_SHORT=$commit_short" >> $env:GITHUB_OUTPUT
          echo "Generated version: $version"

      - name: Delete existing release if exists
        run: |
          gh release delete ${{ steps.version.outputs.VERSION }} --yes --cleanup-tag 2>$null || echo "No existing release to delete"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new release
        run: |
          $notes = @"
          ðŸŽ® HexMaster - Build automatique
          
          ðŸ“… Date: $(Get-Date -Format 'dd/MM/yyyy HH:mm')
          ðŸ”§ Commit: ${{ steps.version.outputs.COMMIT_SHORT }}
          ðŸš€ Branch: ${{ github.ref_name }}
          
          Comment jouer:
          1. TÃ©lÃ©chargez HexMaster.exe ci-dessous
          2. Lancez le fichier directement (aucune installation requise)
          3. Amusez-vous bien!
          
          Note: Cette version a Ã©tÃ© gÃ©nÃ©rÃ©e automatiquement depuis le dernier code source.
          "@
          
          gh release create ${{ steps.version.outputs.VERSION }} --title "HexMaster ${{ steps.version.outputs.VERSION }}" --notes $notes --latest dist/HexMaster.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up old releases
        run: |
          $releases = gh release list --limit 100 --json tagName,name | ConvertFrom-Json
          $toDelete = $releases | Select-Object -Skip 5
          foreach ($release in $toDelete) {
            Write-Host "Deleting old release: $($release.tagName)"
            gh release delete $release.tagName --yes --cleanup-tag
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
